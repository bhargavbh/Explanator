convert.bash v0.1
*** This is NuSMV 2.2.2 zchaff (compiled on Tue Oct 12 09:35:31 UTC 2004)
*** For more information of NuSMV see <http://nusmv.irst.itc.it>
*** or email to <nusmv-users@irst.itc.it>.
*** Please report bugs to <nusmv@irst.itc.it>.

WARNING *** This version of NuSMV is linked to the zchaff SAT solver  ***
WARNING *** (see http://www.ee.princeton.edu/~chaff/).                ***
WARNING *** Zchaff is used in Bounded Model Checking when the         ***
WARNING *** environment variable sat_solver is set to "zchaff".       ***
WARNING *** Notice that zchaff is for non-commercial purposes only.   ***
WARNING *** NO COMMERCIAL USE OF ZCHAFF IS ALLOWED WITHOUT WRITTEN    ***
WARNING *** PERMISSION FROM PRINCETON UNIVERSITY.                     ***
WARNING *** Please contact Sharad Malik (malik@ee.princeton.edu)      ***
WARNING *** for details.                                              ***

Starting the batch interaction.
Parsing file prod-cons.p1negnv.ltl.smv ......done.
Flattening hierarchy ......done.
Encoding variables ...... done.

********   WARNING   ********
The variables: _process_selector_.0 , _process_selector_.1
have not been specified in the ordering file.
They have been positioned at the end of the ordering.
******** END WARNING ********
Building Model ...checking for multiple assignments...
Done
checking for circular assignments...
Done
checking for multiple assignments in process srt...
Done
checking for circular assignments in process srt...
Done
checking for multiple assignments in process sm...
Done
checking for circular assignments in process sm...
Done
checking for multiple assignments in process sim...
Done
checking for circular assignments in process sim...
Done
... done.
... done.
Setting reachable states on......done
evaluating LTL specification !( G (srt.state = sort_ready -> (srt.state = sort_ready S (srt.state = subst S (srt.state = sort S (srt.state = sort_req S srt.state = wait))))) &  G  F srt.state = sort_ready) 
Computing the corresponding tableau........ done
Parsing the generated tableau........done
Flattening the generated tableau........ done
Creating LTL tableau variables...

computing reachable state space
  iteration 0: BDD size = 22, frontier size = 22, states = 4096
  forward step done, size = 30
  new frontier computed, size = 21
  iteration 1: BDD size = 30, frontier size = 21, states = 12288
  forward step done, size = 38
  new frontier computed, size = 21
  iteration 2: BDD size = 38, frontier size = 21, states = 20480
  forward step done, size = 37
  new frontier computed, size = 21
  iteration 3: BDD size = 37, frontier size = 21, states = 28672
  forward step done, size = 40
  new frontier computed, size = 22
  iteration 4: BDD size = 40, frontier size = 22, states = 32768
  forward step done, size = 72
  new frontier computed, size = 49
  iteration 5: BDD size = 72, frontier size = 49, states = 32832
  forward step done, size = 85
  new frontier computed, size = 48
  iteration 6: BDD size = 85, frontier size = 48, states = 32960
  forward step done, size = 87
  new frontier computed, size = 49
  iteration 7: BDD size = 87, frontier size = 49, states = 33024
  forward step done, size = 104
  new frontier computed, size = 56
  iteration 8: BDD size = 104, frontier size = 56, states = 33216
  forward step done, size = 115
  new frontier computed, size = 56
  iteration 9: BDD size = 115, frontier size = 56, states = 33408
  forward step done, size = 165
  new frontier computed, size = 101
  iteration 10: BDD size = 165, frontier size = 101, states = 33648
  forward step done, size = 212
  new frontier computed, size = 148
  iteration 11: BDD size = 212, frontier size = 148, states = 33936
  forward step done, size = 287
  new frontier computed, size = 191
  iteration 12: BDD size = 287, frontier size = 191, states = 34400
  forward step done, size = 329
  new frontier computed, size = 208
  iteration 13: BDD size = 329, frontier size = 208, states = 35528
  forward step done, size = 389
  new frontier computed, size = 231
  iteration 14: BDD size = 389, frontier size = 231, states = 37856
  forward step done, size = 479
  new frontier computed, size = 273
  iteration 15: BDD size = 479, frontier size = 273, states = 42176
  forward step done, size = 611
  new frontier computed, size = 392
  iteration 16: BDD size = 611, frontier size = 392, states = 46000
  forward step done, size = 713
  new frontier computed, size = 459
  iteration 17: BDD size = 713, frontier size = 459, states = 50476
  forward step done, size = 952
  new frontier computed, size = 458
  iteration 18: BDD size = 952, frontier size = 458, states = 55012
  forward step done, size = 978
  new frontier computed, size = 468
  iteration 19: BDD size = 978, frontier size = 468, states = 60880
  forward step done, size = 989
  new frontier computed, size = 381
  iteration 20: BDD size = 989, frontier size = 381, states = 64820
  forward step done, size = 889
  new frontier computed, size = 305
  iteration 21: BDD size = 889, frontier size = 305, states = 69156
  forward step done, size = 842
  new frontier computed, size = 321
  iteration 22: BDD size = 842, frontier size = 321, states = 72276
  forward step done, size = 845
  new frontier computed, size = 302
  iteration 23: BDD size = 845, frontier size = 302, states = 76916
  forward step done, size = 835
  new frontier computed, size = 290
  iteration 24: BDD size = 835, frontier size = 290, states = 84516
  forward step done, size = 872
  new frontier computed, size = 368
  iteration 25: BDD size = 872, frontier size = 368, states = 89860
  forward step done, size = 889
  new frontier computed, size = 496
  iteration 26: BDD size = 889, frontier size = 496, states = 95720
  forward step done, size = 805
  new frontier computed, size = 550
  iteration 27: BDD size = 805, frontier size = 550, states = 101766
  forward step done, size = 960
  new frontier computed, size = 634
  iteration 28: BDD size = 960, frontier size = 634, states = 108395
  forward step done, size = 748
  new frontier computed, size = 480
  iteration 29: BDD size = 748, frontier size = 480, states = 111642
  forward step done, size = 704
  new frontier computed, size = 265
  iteration 30: BDD size = 704, frontier size = 265, states = 112692
  forward step done, size = 719
  new frontier computed, size = 207
  iteration 31: BDD size = 719, frontier size = 207, states = 113602
  forward step done, size = 834
  new frontier computed, size = 249
  iteration 32: BDD size = 834, frontier size = 249, states = 115038
  forward step done, size = 1030
  new frontier computed, size = 327
  iteration 33: BDD size = 1030, frontier size = 327, states = 118964
  forward step done, size = 1059
  new frontier computed, size = 296
  iteration 34: BDD size = 1059, frontier size = 296, states = 121890
  forward step done, size = 1192
  new frontier computed, size = 368
  iteration 35: BDD size = 1192, frontier size = 368, states = 122990
  forward step done, size = 1259
  new frontier computed, size = 416
  iteration 36: BDD size = 1259, frontier size = 416, states = 124236
  forward step done, size = 1310
  new frontier computed, size = 296
  iteration 37: BDD size = 1310, frontier size = 296, states = 125812
  forward step done, size = 1342
  new frontier computed, size = 341
  iteration 38: BDD size = 1342, frontier size = 341, states = 127354
  forward step done, size = 1421
  new frontier computed, size = 333
  iteration 39: BDD size = 1421, frontier size = 333, states = 128279
  forward step done, size = 1309
  new frontier computed, size = 215
  iteration 40: BDD size = 1309, frontier size = 215, states = 128646
  forward step done, size = 1270
  new frontier computed, size = 95
  iteration 41: BDD size = 1270, frontier size = 95, states = 128698
  forward step done, size = 1297
  new frontier computed, size = 95
  iteration 42: BDD size = 1297, frontier size = 95, states = 128750
  forward step done, size = 1314
  new frontier computed, size = 87
  iteration 43: BDD size = 1314, frontier size = 87, states = 128770
  forward step done, size = 1319
  new frontier computed, size = 87
  iteration 44: BDD size = 1319, frontier size = 87, states = 128790
  forward step done, size = 1347
  new frontier computed, size = 76
  iteration 45: BDD size = 1347, frontier size = 76, states = 128804
  forward step done, size = 1335
  new frontier computed, size = 76
  iteration 46: BDD size = 1335, frontier size = 76, states = 128818
  forward step done, size = 1328
  new frontier computed, size = 76
  iteration 47: BDD size = 1328, frontier size = 76, states = 128832
  forward step done, size = 1328
  new frontier computed, size = 1
done
Computing the set of fair <state>x<input> pairs
  size of res0 = 3.43597e+10 <states>x<input>, 1 BDD nodes
    size of Y0 = 515328 <states>x<inputs>, 1328 BDD nodes
    size of Y0 = 64416 <states>x<inputs>, 244 BDD nodes
    size of Y1 = 72142 <states>x<inputs>, 586 BDD nodes
    size of Y2 = 102656 <states>x<inputs>, 716 BDD nodes
    size of Y3 = 139738 <states>x<inputs>, 1075 BDD nodes
    size of Y4 = 218948 <states>x<inputs>, 1335 BDD nodes
    size of Y5 = 336016 <states>x<inputs>, 1240 BDD nodes
    size of Y6 = 392654 <states>x<inputs>, 1433 BDD nodes
    size of Y7 = 433530 <states>x<inputs>, 2034 BDD nodes
    size of Y8 = 468316 <states>x<inputs>, 2280 BDD nodes
    size of Y9 = 511196 <states>x<inputs>, 1751 BDD nodes
    size of Y10 = 514088 <states>x<inputs>, 1507 BDD nodes
    size of Y11 = 515328 <states>x<inputs>, 1328 BDD nodes
    size of Y0 = 515328 <states>x<inputs>, 1328 BDD nodes
    size of Y0 = 128832 <states>x<inputs>, 1330 BDD nodes
    size of Y1 = 491172 <states>x<inputs>, 2191 BDD nodes
    size of Y0 = 128832 <states>x<inputs>, 1330 BDD nodes
    size of Y1 = 491172 <states>x<inputs>, 2191 BDD nodes
  size of res1 = 483120 <states>x<input>, 1329 BDD nodes
    size of Y0 = 483120 <states>x<inputs>, 1329 BDD nodes
    size of Y0 = 32208 <states>x<inputs>, 245 BDD nodes
    size of Y1 = 39934 <states>x<inputs>, 587 BDD nodes
    size of Y2 = 70448 <states>x<inputs>, 717 BDD nodes
    size of Y3 = 107530 <states>x<inputs>, 1076 BDD nodes
    size of Y4 = 186740 <states>x<inputs>, 1336 BDD nodes
    size of Y5 = 303808 <states>x<inputs>, 1241 BDD nodes
    size of Y6 = 360446 <states>x<inputs>, 1434 BDD nodes
    size of Y7 = 401322 <states>x<inputs>, 2035 BDD nodes
    size of Y8 = 436108 <states>x<inputs>, 2281 BDD nodes
    size of Y9 = 478988 <states>x<inputs>, 1752 BDD nodes
    size of Y10 = 481880 <states>x<inputs>, 1508 BDD nodes
    size of Y11 = 483120 <states>x<inputs>, 1329 BDD nodes
    size of Y0 = 483120 <states>x<inputs>, 1329 BDD nodes
    size of Y0 = 120780 <states>x<inputs>, 1331 BDD nodes
    size of Y1 = 483120 <states>x<inputs>, 1329 BDD nodes
    size of Y0 = 120780 <states>x<inputs>, 1331 BDD nodes
    size of Y1 = 483120 <states>x<inputs>, 1329 BDD nodes
done
  size of res0 = 3.43597e+10 <states>x<input>, 1 BDD nodes
    size of Y0 = 515328 <states>x<inputs>, 1328 BDD nodes
    size of Y0 = 64416 <states>x<inputs>, 244 BDD nodes
    size of Y1 = 72142 <states>x<inputs>, 586 BDD nodes
    size of Y2 = 102656 <states>x<inputs>, 716 BDD nodes
    size of Y3 = 139738 <states>x<inputs>, 1075 BDD nodes
    size of Y4 = 218948 <states>x<inputs>, 1335 BDD nodes
    size of Y5 = 336016 <states>x<inputs>, 1240 BDD nodes
    size of Y6 = 392654 <states>x<inputs>, 1433 BDD nodes
    size of Y7 = 433530 <states>x<inputs>, 2034 BDD nodes
    size of Y8 = 468316 <states>x<inputs>, 2280 BDD nodes
    size of Y9 = 511196 <states>x<inputs>, 1751 BDD nodes
    size of Y10 = 514088 <states>x<inputs>, 1507 BDD nodes
    size of Y11 = 515328 <states>x<inputs>, 1328 BDD nodes
    size of Y0 = 515328 <states>x<inputs>, 1328 BDD nodes
    size of Y0 = 128832 <states>x<inputs>, 1330 BDD nodes
    size of Y1 = 491172 <states>x<inputs>, 2191 BDD nodes
    size of Y0 = 128832 <states>x<inputs>, 1330 BDD nodes
    size of Y1 = 491172 <states>x<inputs>, 2191 BDD nodes
  size of res1 = 483120 <states>x<input>, 1329 BDD nodes
    size of Y0 = 483120 <states>x<inputs>, 1329 BDD nodes
    size of Y0 = 32208 <states>x<inputs>, 245 BDD nodes
    size of Y1 = 39934 <states>x<inputs>, 587 BDD nodes
    size of Y2 = 70448 <states>x<inputs>, 717 BDD nodes
    size of Y3 = 107530 <states>x<inputs>, 1076 BDD nodes
    size of Y4 = 186740 <states>x<inputs>, 1336 BDD nodes
    size of Y5 = 303808 <states>x<inputs>, 1241 BDD nodes
    size of Y6 = 360446 <states>x<inputs>, 1434 BDD nodes
    size of Y7 = 401322 <states>x<inputs>, 2035 BDD nodes
    size of Y8 = 436108 <states>x<inputs>, 2281 BDD nodes
    size of Y9 = 478988 <states>x<inputs>, 1752 BDD nodes
    size of Y10 = 481880 <states>x<inputs>, 1508 BDD nodes
    size of Y11 = 483120 <states>x<inputs>, 1329 BDD nodes
    size of Y0 = 483120 <states>x<inputs>, 1329 BDD nodes
    size of Y0 = 120780 <states>x<inputs>, 1331 BDD nodes
    size of Y1 = 483120 <states>x<inputs>, 1329 BDD nodes
    size of Y0 = 120780 <states>x<inputs>, 1331 BDD nodes
    size of Y1 = 483120 <states>x<inputs>, 1329 BDD nodes
-- specification !( G (srt.state = sort_ready -> (srt.state = sort_ready S (srt.state = subst S (srt.state = sort S (srt.state = sort_req S srt.state = wait))))) &  G  F srt.state = sort_ready) is false
  size of res0 = 3.43597e+10 <states>x<input>, 1 BDD nodes
    size of Y0 = 515328 <states>x<inputs>, 1328 BDD nodes
    size of Y0 = 64416 <states>x<inputs>, 244 BDD nodes
    size of Y1 = 72142 <states>x<inputs>, 586 BDD nodes
    size of Y2 = 102656 <states>x<inputs>, 716 BDD nodes
    size of Y3 = 139738 <states>x<inputs>, 1075 BDD nodes
    size of Y4 = 218948 <states>x<inputs>, 1335 BDD nodes
    size of Y5 = 336016 <states>x<inputs>, 1240 BDD nodes
    size of Y6 = 392654 <states>x<inputs>, 1433 BDD nodes
    size of Y7 = 433530 <states>x<inputs>, 2034 BDD nodes
    size of Y8 = 468316 <states>x<inputs>, 2280 BDD nodes
    size of Y9 = 511196 <states>x<inputs>, 1751 BDD nodes
    size of Y10 = 514088 <states>x<inputs>, 1507 BDD nodes
    size of Y11 = 515328 <states>x<inputs>, 1328 BDD nodes
    size of Y0 = 515328 <states>x<inputs>, 1328 BDD nodes
    size of Y0 = 128832 <states>x<inputs>, 1330 BDD nodes
    size of Y1 = 491172 <states>x<inputs>, 2191 BDD nodes
    size of Y0 = 128832 <states>x<inputs>, 1330 BDD nodes
    size of Y1 = 491172 <states>x<inputs>, 2191 BDD nodes
  size of res1 = 483120 <states>x<input>, 1329 BDD nodes
    size of Y0 = 483120 <states>x<inputs>, 1329 BDD nodes
    size of Y0 = 32208 <states>x<inputs>, 245 BDD nodes
    size of Y1 = 39934 <states>x<inputs>, 587 BDD nodes
    size of Y2 = 70448 <states>x<inputs>, 717 BDD nodes
    size of Y3 = 107530 <states>x<inputs>, 1076 BDD nodes
    size of Y4 = 186740 <states>x<inputs>, 1336 BDD nodes
    size of Y5 = 303808 <states>x<inputs>, 1241 BDD nodes
    size of Y6 = 360446 <states>x<inputs>, 1434 BDD nodes
    size of Y7 = 401322 <states>x<inputs>, 2035 BDD nodes
    size of Y8 = 436108 <states>x<inputs>, 2281 BDD nodes
    size of Y9 = 478988 <states>x<inputs>, 1752 BDD nodes
    size of Y10 = 481880 <states>x<inputs>, 1508 BDD nodes
    size of Y11 = 483120 <states>x<inputs>, 1329 BDD nodes
    size of Y0 = 483120 <states>x<inputs>, 1329 BDD nodes
    size of Y0 = 120780 <states>x<inputs>, 1331 BDD nodes
    size of Y1 = 483120 <states>x<inputs>, 1329 BDD nodes
    size of Y0 = 120780 <states>x<inputs>, 1331 BDD nodes
    size of Y1 = 483120 <states>x<inputs>, 1329 BDD nodes
  size of res0 = 3.43597e+10 <states>x<input>, 1 BDD nodes
    size of Y0 = 515328 <states>x<inputs>, 1328 BDD nodes
    size of Y0 = 64416 <states>x<inputs>, 244 BDD nodes
    size of Y1 = 72142 <states>x<inputs>, 586 BDD nodes
    size of Y2 = 102656 <states>x<inputs>, 716 BDD nodes
    size of Y3 = 139738 <states>x<inputs>, 1075 BDD nodes
    size of Y4 = 218948 <states>x<inputs>, 1335 BDD nodes
    size of Y5 = 336016 <states>x<inputs>, 1240 BDD nodes
    size of Y6 = 392654 <states>x<inputs>, 1433 BDD nodes
    size of Y7 = 433530 <states>x<inputs>, 2034 BDD nodes
    size of Y8 = 468316 <states>x<inputs>, 2280 BDD nodes
    size of Y9 = 511196 <states>x<inputs>, 1751 BDD nodes
    size of Y10 = 514088 <states>x<inputs>, 1507 BDD nodes
    size of Y11 = 515328 <states>x<inputs>, 1328 BDD nodes
    size of Y0 = 515328 <states>x<inputs>, 1328 BDD nodes
    size of Y0 = 128832 <states>x<inputs>, 1330 BDD nodes
    size of Y1 = 491172 <states>x<inputs>, 2191 BDD nodes
    size of Y0 = 128832 <states>x<inputs>, 1330 BDD nodes
    size of Y1 = 491172 <states>x<inputs>, 2191 BDD nodes
  size of res1 = 483120 <states>x<input>, 1329 BDD nodes
    size of Y0 = 483120 <states>x<inputs>, 1329 BDD nodes
    size of Y0 = 32208 <states>x<inputs>, 245 BDD nodes
    size of Y1 = 39934 <states>x<inputs>, 587 BDD nodes
    size of Y2 = 70448 <states>x<inputs>, 717 BDD nodes
    size of Y3 = 107530 <states>x<inputs>, 1076 BDD nodes
    size of Y4 = 186740 <states>x<inputs>, 1336 BDD nodes
    size of Y5 = 303808 <states>x<inputs>, 1241 BDD nodes
    size of Y6 = 360446 <states>x<inputs>, 1434 BDD nodes
    size of Y7 = 401322 <states>x<inputs>, 2035 BDD nodes
    size of Y8 = 436108 <states>x<inputs>, 2281 BDD nodes
    size of Y9 = 478988 <states>x<inputs>, 1752 BDD nodes
    size of Y10 = 481880 <states>x<inputs>, 1508 BDD nodes
    size of Y11 = 483120 <states>x<inputs>, 1329 BDD nodes
    size of Y0 = 483120 <states>x<inputs>, 1329 BDD nodes
    size of Y0 = 120780 <states>x<inputs>, 1331 BDD nodes
    size of Y1 = 483120 <states>x<inputs>, 1329 BDD nodes
    size of Y0 = 120780 <states>x<inputs>, 1331 BDD nodes
    size of Y1 = 483120 <states>x<inputs>, 1329 BDD nodes
searching (counter)example for EG TRUE
eu_explain: iteration 0: states = 1, BDD nodes = 34
searching (counter)example for EG TRUE
eu_explain: iteration 0: states = 1, BDD nodes = 34
eu_explain: iteration 1: states = 3, BDD nodes = 42
eu_explain: iteration 2: states = 5, BDD nodes = 62
eu_explain: iteration 3: states = 13, BDD nodes = 77
eu_explain: iteration 4: states = 23, BDD nodes = 99
eu_explain: iteration 5: states = 30, BDD nodes = 99
eu_explain: iteration 6: states = 38, BDD nodes = 112
eu_explain: iteration 7: states = 42, BDD nodes = 114
eu_explain: iteration 8: states = 54, BDD nodes = 131
searching (counter)example for EG TRUE
eu_explain: iteration 0: states = 1, BDD nodes = 34
searching (counter)example for EG TRUE
eu_explain: iteration 0: states = 1, BDD nodes = 34
searching (counter)example for EG TRUE
eu_explain: iteration 0: states = 1, BDD nodes = 34
searching (counter)example for EG TRUE
eu_explain: iteration 0: states = 1, BDD nodes = 34
eu_explain: iteration 1: states = 4, BDD nodes = 55
eu_explain: iteration 2: states = 10, BDD nodes = 76
eu_explain: iteration 3: states = 28, BDD nodes = 107
eu_explain: iteration 4: states = 70, BDD nodes = 126
eu_explain: iteration 5: states = 153, BDD nodes = 163
eu_explain: iteration 6: states = 259, BDD nodes = 237
eu_explain: iteration 7: states = 386, BDD nodes = 304
eu_explain: iteration 8: states = 514, BDD nodes = 400
eu_explain: iteration 9: states = 704, BDD nodes = 460
eu_explain: iteration 10: states = 816, BDD nodes = 457
eu_explain: iteration 11: states = 920, BDD nodes = 459
eu_explain: iteration 12: states = 1038, BDD nodes = 477
eu_explain: iteration 13: states = 1294, BDD nodes = 530
eu_explain: iteration 14: states = 1864, BDD nodes = 557
eu_explain: iteration 15: states = 2590, BDD nodes = 601
eu_explain: iteration 16: states = 3620, BDD nodes = 737
eu_explain: iteration 17: states = 4647, BDD nodes = 893
eu_explain: iteration 18: states = 5975, BDD nodes = 1022
eu_explain: iteration 19: states = 6947, BDD nodes = 1107
eu_explain: iteration 20: states = 7944, BDD nodes = 1147
eu_explain: iteration 21: states = 8607, BDD nodes = 1158
eu_explain: iteration 22: states = 9537, BDD nodes = 1126
eu_explain: iteration 23: states = 11380, BDD nodes = 1245
eu_explain: iteration 24: states = 13952, BDD nodes = 1420
eu_explain: iteration 25: states = 17920, BDD nodes = 1621
eu_explain: iteration 26: states = 21914, BDD nodes = 1749
eu_explain: iteration 27: states = 26902, BDD nodes = 1955
eu_explain: iteration 28: states = 31707, BDD nodes = 2270
eu_explain: iteration 29: states = 36986, BDD nodes = 2560
eu_explain: iteration 30: states = 39589, BDD nodes = 2543
eu_explain: iteration 31: states = 41709, BDD nodes = 2317
eu_explain: iteration 32: states = 43084, BDD nodes = 2321
eu_explain: iteration 33: states = 45062, BDD nodes = 2410
eu_explain: iteration 34: states = 49100, BDD nodes = 2496
eu_explain: iteration 35: states = 52708, BDD nodes = 2509
eu_explain: iteration 36: states = 56541, BDD nodes = 2640
eu_explain: iteration 37: states = 60292, BDD nodes = 2550
eu_explain: iteration 38: states = 64800, BDD nodes = 2692
eu_explain: iteration 39: states = 68290, BDD nodes = 2763
eu_explain: iteration 40: states = 70842, BDD nodes = 2660
eu_explain: iteration 41: states = 72404, BDD nodes = 2434
eu_explain: iteration 42: states = 74031, BDD nodes = 2314
eu_explain: iteration 43: states = 75218, BDD nodes = 2268
eu_explain: iteration 44: states = 76594, BDD nodes = 2096
eu_explain: iteration 45: states = 77441, BDD nodes = 2009
eu_explain: iteration 46: states = 78281, BDD nodes = 1879
eu_explain: iteration 47: states = 79475, BDD nodes = 1832
eu_explain: iteration 48: states = 80693, BDD nodes = 1598
eu_explain: iteration 49: states = 82313, BDD nodes = 1630
eu_explain: iteration 50: states = 83393, BDD nodes = 1492
eu_explain: iteration 51: states = 84059, BDD nodes = 1457
eu_explain: iteration 52: states = 84401, BDD nodes = 1411
eu_explain: iteration 53: states = 84599, BDD nodes = 1413
eu_explain: iteration 54: states = 84869, BDD nodes = 1415
eu_explain: iteration 55: states = 85265, BDD nodes = 1474
eu_explain: iteration 56: states = 85355, BDD nodes = 1449
eu_explain: iteration 57: states = 85427, BDD nodes = 1440
eu_explain: iteration 58: states = 85373, BDD nodes = 1408
searching (counter)example for EG TRUE
eu_explain: iteration 0: states = 1, BDD nodes = 34
searching (counter)example for EG TRUE
eu_explain: iteration 0: states = 1, BDD nodes = 34
eu_explain: iteration 1: states = 6, BDD nodes = 52
eu_explain: iteration 2: states = 14, BDD nodes = 71
eu_explain: iteration 3: states = 36, BDD nodes = 82
eu_explain: iteration 4: states = 88, BDD nodes = 125
eu_explain: iteration 5: states = 160, BDD nodes = 164
eu_explain: iteration 6: states = 250, BDD nodes = 206
eu_explain: iteration 7: states = 340, BDD nodes = 300
searching (counter)example for EG TRUE
eu_explain: iteration 0: states = 1, BDD nodes = 34
searching (counter)example for EG TRUE
eu_explain: iteration 0: states = 1, BDD nodes = 34
searching (counter)example for EG TRUE
eu_explain: iteration 0: states = 1, BDD nodes = 34
searching (counter)example for EG TRUE
eu_explain: iteration 0: states = 1, BDD nodes = 34
eu_explain: iteration 1: states = 6, BDD nodes = 52
eu_explain: iteration 2: states = 14, BDD nodes = 72
eu_explain: iteration 3: states = 38, BDD nodes = 97
eu_explain: iteration 4: states = 94, BDD nodes = 135
eu_explain: iteration 5: states = 168, BDD nodes = 152
eu_explain: iteration 6: states = 270, BDD nodes = 207
eu_explain: iteration 7: states = 394, BDD nodes = 322
eu_explain: iteration 8: states = 576, BDD nodes = 394
eu_explain: iteration 9: states = 718, BDD nodes = 488
eu_explain: iteration 10: states = 881, BDD nodes = 549
eu_explain: iteration 11: states = 997, BDD nodes = 608
eu_explain: iteration 12: states = 1163, BDD nodes = 643
-- as demonstrated by the following execution sequence
Trace Description: LTL Counterexample 
Trace Type: Counterexample 
-> State: 1.1 <-
  buffer[1] = 4
  buffer[2] = 4
  buffer[3] = 4
  bufsize = 0
  sim.state = new_val
  sim.val = 0
  sm.state = test
  srt.state = wait
  srt.buffer_aux[1] = 4
  srt.buffer_aux[2] = 4
  srt.buffer_aux[3] = 4
  srt.ord = 0
  sort_OK = 0
  sort_req = 0
-> Input: 1.2 <-
  _process_selector_ = sm
-> State: 1.2 <-
  sm.state = inc
-> Input: 1.3 <-
  _process_selector_ = sm
-> State: 1.3 <-
  bufsize = 1
  sm.state = poebuf
-> Input: 1.4 <-
  _process_selector_ = sm
-> State: 1.4 <-
  buffer[1] = 1
  sm.state = req
-> Input: 1.5 <-
  _process_selector_ = sm
-> State: 1.5 <-
  sm.state = wait
  sort_req = 1
-> Input: 1.6 <-
  _process_selector_ = srt
-> State: 1.6 <-
  srt.state = sort
  srt.buffer_aux[1] = 1
-> Input: 1.7 <-
  _process_selector_ = srt
-> State: 1.7 <-
  srt.ord = 1
-> Input: 1.8 <-
  _process_selector_ = srt
-> State: 1.8 <-
  srt.state = subst
-> Input: 1.9 <-
  _process_selector_ = srt
-> State: 1.9 <-
  srt.state = sort_ready
-> Input: 1.10 <-
  _process_selector_ = srt
-> State: 1.10 <-
  srt.state = wait
  sort_OK = 1
  sort_req = 0
-> Input: 1.11 <-
  _process_selector_ = sm
-> State: 1.11 <-
  sm.state = test
-> Input: 1.12 <-
  _process_selector_ = sim
-- Loop starts here
-> State: 1.12 <-
  sim.state = dec
  sim.val = 1
-> Input: 1.13 <-
  _process_selector_ = sm
-> State: 1.13 <-
  sm.state = inc
-> Input: 1.14 <-
  _process_selector_ = sm
-> State: 1.14 <-
  bufsize = 2
  sm.state = poebuf
-> Input: 1.15 <-
  _process_selector_ = sm
-> State: 1.15 <-
  buffer[2] = 1
  sm.state = req
  sort_OK = 0
-> Input: 1.16 <-
  _process_selector_ = sm
-> State: 1.16 <-
  sm.state = wait
  sort_req = 1
-> Input: 1.17 <-
  _process_selector_ = srt
-> State: 1.17 <-
  srt.state = sort
  srt.buffer_aux[2] = 1
-> Input: 1.18 <-
  _process_selector_ = srt
-> State: 1.18 <-
  srt.state = subst
-> Input: 1.19 <-
  _process_selector_ = srt
-> State: 1.19 <-
  srt.state = sort_ready
-> Input: 1.20 <-
  _process_selector_ = srt
-> State: 1.20 <-
  srt.state = wait
  sort_OK = 1
  sort_req = 0
-> Input: 1.21 <-
  _process_selector_ = sm
-> State: 1.21 <-
  sm.state = test
-> Input: 1.22 <-
  _process_selector_ = sim
-> State: 1.22 <-
  bufsize = 1
  sim.state = new_val
-> Input: 1.23 <-
  _process_selector_ = sm
-> State: 1.23 <-
  sm.state = inc
-> Input: 1.24 <-
  _process_selector_ = sm
-> State: 1.24 <-
  bufsize = 2
  sm.state = poebuf
-> Input: 1.25 <-
  _process_selector_ = sim
-> State: 1.25 <-
  sim.state = dec
-> Input: 1.26 <-
  _process_selector_ = sm
-> State: 1.26 <-
  buffer[2] = 4
  sm.state = req
  sort_OK = 0
-> Input: 1.27 <-
  _process_selector_ = sm
-> State: 1.27 <-
  sm.state = wait
  sort_req = 1
-> Input: 1.28 <-
  _process_selector_ = srt
-> State: 1.28 <-
  srt.state = sort
  srt.buffer_aux[2] = 4
-> Input: 1.29 <-
  _process_selector_ = sim
-> State: 1.29 <-
  bufsize = 1
  sim.state = new_val
-> Input: 1.30 <-
  _process_selector_ = srt
-> State: 1.30 <-
  srt.state = subst
-> Input: 1.31 <-
  _process_selector_ = srt
-> State: 1.31 <-
  srt.state = sort_ready
-> Input: 1.32 <-
  _process_selector_ = srt
-> State: 1.32 <-
  srt.state = wait
  sort_OK = 1
  sort_req = 0
-> Input: 1.33 <-
  _process_selector_ = sm
-> State: 1.33 <-
  sm.state = test
-> Input: 1.34 <-
  _process_selector_ = sim
-> State: 1.34 <-
  sim.state = dec
######################################################################